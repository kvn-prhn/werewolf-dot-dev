{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Router.svelte","../../node_modules/svelte-routing/src/Route.svelte","../../src/routes/Discord.svelte","../../src/constants/directionSigns.js","../../src/components/DirectionSign.svelte","../../src/constants/woodenSigns.js","../../src/components/WoodenSign.svelte","../../src/routes/Home.svelte","../../src/utils/hex-color.js","../../src/global/sprite.js","../../src/global/physics.js","../../src/global/audio.js","../../src/global/draw.js","../../src/global/spawn.js","../../src/global/scene.js","../../src/routes/Server64.svelte","../../src/utils/lunar-templates.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  export let server64;\r\n  \r\n  onMount(async () => {\r\n    const botAPIEndpoint = \"https://wwd-site-bot.uc.r.appspot.com/\";\r\n    const botAPIResponse = await fetch(botAPIEndpoint + server64 + \"/discord\");\r\n    const data = await botAPIResponse.json();\r\n    const { url: discordURL } = data;\r\n    \r\n    window.location.href = discordURL;\r\n  })\r\n</script>","export const directionSigns = [\r\n  { \r\n    text: \"Start\", \r\n    style: `font-size: 52px; top: 8%; left: 15%;`\r\n  },\r\n  { \r\n    text: \"Creating\",\r\n    style: `font-size: 40px; top: 18%; left: 10%;`\r\n  },\r\n  {\r\n    text: \"Games.\",\r\n    style: `font-size: 46px; top: 14%; left: 12%;`\r\n  },\r\n]","<script>\r\n  import { getContext } from \"svelte\";\r\n  import { directionSigns } from \"../constants/directionSigns\";\r\n\r\n  export let index = -1;\r\n  \r\n  let { text, style } = directionSigns[index] || {};\r\n  let { selectedIndex } = getContext(\"sign-select\");\r\n  \r\n  $: active = index === $selectedIndex;\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    background-image: url(\"/assets/direction-sign.png\");\r\n    background-repeat: no-repeat;\r\n    background-size: var(--direction-sign-width) var(--direction-sign-height);\r\n    width: var(--direction-sign-width);\r\n    height: var(--direction-sign-height);\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .sign-text {\r\n    font-family: 'Permanent Marker', cursive;\r\n    position: relative;\r\n    width: 224px;\r\n  }\r\n  \r\n  .active {\r\n    color: var(--active-sign-color);\r\n  }\r\n</style>\r\n\r\n<main class=\"direciton-sign-component\" class:active on:click>\r\n  <section class=\"sign-text\" {style}>\r\n    {text}\r\n  </section>\r\n</main>","export const woodenSigns = [\r\n  {\r\n    intro: \"with a fresh Discord server.\",\r\n    list: [\r\n      `Give it a name.`,\r\n      `<a href=\"https://discord.com/oauth2/authorize?client_id=791862018113798154&scope=bot&permissions=93264\" target=\"_blank\">Invite the bot</a> to your new server.`,\r\n      `Celebrate! You took the 1st step 🎉`\r\n    ],\r\n    outro: `<section class=\"links\">\r\n    <a href=\"https://werewolf.dev/A-VI65CdYg\" target=\"_blank\">\r\n        <svg width=\"100\" height=\"100\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"gamepad\" class=\"svg-inline--fa fa-gamepad fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M480.07 96H160a160 160 0 1 0 114.24 272h91.52A160 160 0 1 0 480.07 96zM248 268a12 12 0 0 1-12 12h-52v52a12 12 0 0 1-12 12h-24a12 12 0 0 1-12-12v-52H84a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h52v-52a12 12 0 0 1 12-12h24a12 12 0 0 1 12 12v52h52a12 12 0 0 1 12 12zm216 76a40 40 0 1 1 40-40 40 40 0 0 1-40 40zm64-96a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\"></path></svg>\r\n        <span>Demo</span>\r\n    </a>\r\n    \r\n    <a href=\"https://werewolf.dev/A-VI65CdYg/discord\" target=\"_blank\">\r\n        <svg width=\"100\" height=\"100\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"discord\" class=\"svg-inline--fa fa-discord fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M297.216 243.2c0 15.616-11.52 28.416-26.112 28.416-14.336 0-26.112-12.8-26.112-28.416s11.52-28.416 26.112-28.416c14.592 0 26.112 12.8 26.112 28.416zm-119.552-28.416c-14.592 0-26.112 12.8-26.112 28.416s11.776 28.416 26.112 28.416c14.592 0 26.112-12.8 26.112-28.416.256-15.616-11.52-28.416-26.112-28.416zM448 52.736V512c-64.494-56.994-43.868-38.128-118.784-107.776l13.568 47.36H52.48C23.552 451.584 0 428.032 0 398.848V52.736C0 23.552 23.552 0 52.48 0h343.04C424.448 0 448 23.552 448 52.736zm-72.96 242.688c0-82.432-36.864-149.248-36.864-149.248-36.864-27.648-71.936-26.88-71.936-26.88l-3.584 4.096c43.52 13.312 63.744 32.512 63.744 32.512-60.811-33.329-132.244-33.335-191.232-7.424-9.472 4.352-15.104 7.424-15.104 7.424s21.248-20.224 67.328-33.536l-2.56-3.072s-35.072-.768-71.936 26.88c0 0-36.864 66.816-36.864 149.248 0 0 21.504 37.12 78.08 38.912 0 0 9.472-11.52 17.152-21.248-32.512-9.728-44.8-30.208-44.8-30.208 3.766 2.636 9.976 6.053 10.496 6.4 43.21 24.198 104.588 32.126 159.744 8.96 8.96-3.328 18.944-8.192 29.44-15.104 0 0-12.8 20.992-46.336 30.464 7.68 9.728 16.896 20.736 16.896 20.736 56.576-1.792 78.336-38.912 78.336-38.912z\"></path></svg>\r\n        <span>Demo's code</span>\r\n    </a>\r\n    \r\n    <a href=\"https://github.com/devwerewolf/werewolf-dot-dev\" target=\"_blank\">\r\n        <svg width=\"100\" height=\"100\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"github\" class=\"svg-inline--fa fa-github fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\"><path fill=\"currentColor\" d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"></path></svg>\r\n        <span>GitHub repo</span>\r\n    </a>\r\n</section>`,\r\n    marginTop: \"-1%\"\r\n  },\r\n  {\r\n    intro: \"a project is a breeze with bot commands\",\r\n    list: [\r\n      `<span class=\"command\">$start</span> creates the text channels you need`,\r\n      `<span class=\"command\">$example</span> provides some MoonScript, images, and sounds to play with`,\r\n      `<span class=\"command\">$howl</span> shares a link of your current werewolf.dev project`\r\n    ],\r\n    marginTop: \"5%\"\r\n  },\r\n  {\r\n    intro: `You just created one. <span style=\"color: white\">You took the 1st step.\r\n    Everything else is secondary. Finishing is secondary. Starting is an achievement.\r\n    Be proud 💜</span>`,\r\n    marginTop: \"11%\"\r\n  }\r\n]","<script>\r\n  import { getContext } from \"svelte\";\r\n  import { woodenSigns } from \"../constants/woodenSigns\";\r\n\r\n  export let index = -1;\r\n  \r\n  let { intro, outro = \"\", list = [], marginTop } = woodenSigns[index] || {};\r\n  let { selectedIndex } = getContext(\"sign-select\")\r\n  \r\n  $: active = index === $selectedIndex;\r\n  $: style = `margin-top: ${marginTop}`;\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    background-image: url(\"/assets/wooden-sign.png\");\r\n    background-repeat: no-repeat;\r\n    background-size: var(--wooden-sign-width) var(--wooden-sign-height);\r\n    width: var(--wooden-sign-width);\r\n    height: var(--wooden-sign-height);\r\n    margin-top: -1%;\r\n    display: none;\r\n  }\r\n  \r\n  .sign-text {\r\n    font-family: 'Cabin', sans-serif;\r\n    margin-top: 5%;\r\n    margin-left: 7%;\r\n    font-size: 40px;\r\n    width: calc(var(--wooden-sign-width) - 150px);\r\n  }\r\n  \r\n  .intro {\r\n    color: var(--active-sign-color);\r\n  }\r\n  \r\n  .list {\r\n    margin-left: 5%;\r\n  }\r\n  \r\n  ol {\r\n    margin-top: 4%;\r\n  }\r\n\r\n  li {\r\n    margin-top: 2%;\r\n  }\r\n  \r\n  .active {\r\n    display: initial;\r\n  }\r\n</style>\r\n\r\n<main class=\"wooden-sign-component\" {style} class:active>\r\n  <section class=\"sign-text\">\r\n    <span class=\"intro\">{@html intro}</span>\r\n    <div class=\"list\">\r\n      <ol>\r\n        {#each list as listItem}\r\n          <li>{@html listItem}</li>\r\n        {/each}\r\n      </ol>\r\n    </div>\r\n    <span class=\"outro\">{@html outro}</span>\r\n  </section>\r\n</main>","<script>\r\n\timport { setContext } from \"svelte\";\r\n\timport { writable } from \"svelte/store\";\r\n\timport DirectionSign from \"../components/DirectionSign.svelte\";\r\n\timport HowlMoon from \"../components/HowlMoon.svelte\";\r\n\timport WoodenSign from \"../components/WoodenSign.svelte\";\r\n\timport { directionSigns } from \"../constants/directionSigns\";\r\n\timport { woodenSigns } from \"../constants/woodenSigns\";\r\n\r\n\tlet selectedIndex = writable(0);\r\n\t\r\n\tsetContext(\"sign-select\", {\r\n\t\tselectedIndex\r\n\t});\r\n\t\r\n\tfunction selectSign(index) {\r\n\t\t$selectedIndex = index;\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.all-the-signs {\r\n\t\tposition: absolute;\r\n\t\tleft: 5%;\r\n\t\ttop: 15%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.direction-sign-wrapper {\r\n    padding-bottom: 7%;\r\n\t}\r\n</style>\r\n\r\n<main>\r\n\t<HowlMoon />\r\n\t<section class=\"all-the-signs\">\r\n\t\t<div class=\"direction-signs\">\r\n\t\t\t{#each directionSigns as _, index}\r\n\t\t\t\t<div class=\"direction-sign-wrapper\">\r\n\t\t\t\t\t<DirectionSign {index} on:click={() => selectSign(index)}/>\r\n\t\t\t\t</div>\r\n\t\t\t{/each}\r\n\t\t</div>\r\n\t\t\r\n\t\t{#each woodenSigns as _, index}\r\n\t\t\t<WoodenSign {index} />\r\n\t\t{/each}\r\n\t</section>\r\n</main>","export function getHexColor(color) {\r\n  // Convert 0x00... into \"#00...\"\r\n  const baseHexColor = color.toString(16);\r\n  let padZeros = \"\";\r\n  \r\n  for (let i = 0; i < 6 - baseHexColor.length; i++) {\r\n    padZeros += \"0\";\r\n  }\r\n  \r\n  const hexColor = \"#\" + padZeros + baseHexColor;\r\n  return hexColor;\r\n}","window.mirrorSprite = () => {\r\n  const index = window.MIRROR_ID - 1;\r\n  const sceneObject = SCENE[index];\r\n  \r\n  if (sceneObject.obj) {\r\n    sceneObject.obj.flipX = window.MIRROR_X;\r\n  }\r\n}\r\n\r\nwindow.flipSprite = () => {\r\n  const index = window.FLIP_ID - 1;\r\n  const sceneObject = SCENE[index];\r\n  \r\n  if (sceneObject.obj) {\r\n    sceneObject.obj.flipY = window.FLIP_Y;\r\n  }\r\n}\r\n\r\nwindow.animateSprite = () => {\r\n  const index = window.ANIMATE_ID - 1;\r\n  const sceneObject = SCENE[index];\r\n  \r\n  if (sceneObject.obj && sceneObject.obj.anims) {\r\n    sceneObject.obj.anims.play(window.ANIMATE_NAME);\r\n  }\r\n}\r\n\r\nwindow.unanimateSprite = () => {\r\n  const index = window.UNANIMATE_ID - 1;\r\n  const sceneObject = SCENE[index];\r\n  \r\n  if (sceneObject.obj && sceneObject.obj.anims) {\r\n    sceneObject.obj.anims.pause();\r\n    sceneObject.obj.anims.setProgress(0);\r\n  }\r\n}\r\n","window.applyThrust = () => {\r\n  const index = window.THRUST_ID - 1;\r\n  const sceneObject = SCENE[index];\r\n  \r\n  if (sceneObject.obj) {\r\n    // Rotate the direction anti-clockwise because why the hell not amirite?\r\n    const direction = \r\n      window.THRUST_DIRECTION === \"Up\" ? \"Left\" :\r\n      window.THRUST_DIRECTION === \"Down\" ? \"Right\" :\r\n      window.THRUST_DIRECTION === \"Left\" ? \"Back\" :\r\n      window.THRUST_DIRECTION === \"Right\" ? \"\" : null;\r\n      \r\n    if (direction !== null) {\r\n      const amount = window.THRUST_AMOUNT;\r\n      sceneObject.obj[`thrust${direction}`](amount);\r\n    }\r\n  }\r\n}\r\n\r\nwindow._isKinematic = (sceneObject) => {\r\n  const { _collide_name } = sceneObject;\r\n  return _collide_name && _collide_name.startsWith(\"KINEMATIC\");\r\n}\r\n\r\nwindow._isStatic = (sceneObject) => {\r\n  const { _collide_name } = sceneObject;\r\n  return _collide_name && _collide_name.startsWith(\"STATIC\");\r\n}\r\n\r\nwindow._isCharacter = (sceneObject) => {\r\n  const { _collide_name } = sceneObject;\r\n  return _collide_name && _collide_name.startsWith(\"CHARACTER\")\r\n}\r\n  \r\nwindow._collideUsesPointer = (sceneObject) => {\r\n  const { _collide_name } = sceneObject;\r\n  return _collide_name && _collide_name.endsWith(\"POINTER\");\r\n}\r\n\r\nwindow._overlapUsesPointer = (sceneObject) => {\r\n  const { _overlap_name } = sceneObject;\r\n  return _overlap_name && _overlap_name.endsWith(\"POINTER\");\r\n}\r\n\r\nwindow.CollideSceneObjects = () => SCENE.filter((sceneObject) => sceneObject._collide_name)","window.playSound = () => {\r\n  const name = window.SOUND_NAME.toLowerCase();\r\n  phaserContext.sound.setVolume(0.25);\r\n  soundObjects[name].play();\r\n}\r\n\r\nwindow.pauseSound = () => {\r\n  const name = window.SOUND_NAME.toLowerCase();\r\n  soundObjects[name].pause();\r\n}\r\n\r\nwindow.resumeSound = () => {\r\n  const name = window.SOUND_NAME.toLowerCase();\r\n  phaserContext.sound.setVolume(0.25);\r\n  soundObjects[name].resume();\r\n}\r\n\r\nwindow.stopSound = () => {\r\n  const name = window.SOUND_NAME.toLowerCase();\r\n  soundObjects[name].stop();\r\n}","window.drawLine = () => {\r\n  const {\r\n    x1 = 0,\r\n    y1 = 0,\r\n    x2 = x1,\r\n    y2 = y1,\r\n    thickness = 1,\r\n    color = 0x00aaff,\r\n    opacity = 1,\r\n  } = window.LINE_CONFIG;\r\n  \r\n  graphics.lineStyle(thickness, color, opacity);\r\n  graphics.lineBetween(x1, y1, x2, y2);\r\n}\r\n\r\nwindow.drawRectangle = () => {\r\n  const {\r\n    x = 0,\r\n    y = 0,\r\n    width = 1,\r\n    height = 1,\r\n    thickness = 1,\r\n    color = 0x00aaff,\r\n    opacity = 1,\r\n    stroke,\r\n  } = window.RECTANGLE_CONFIG;\r\n  \r\n  graphics.lineStyle(thickness, stroke, opacity);\r\n  graphics.fillStyle(color, opacity);\r\n  graphics.fillRect(x, y, width, height);\r\n  \r\n  if (stroke) {\r\n    graphics.strokeRect(x, y, width, height);\r\n  }\r\n}\r\n\r\nwindow.drawEllipse = () => {\r\n  const {\r\n    x = 0,\r\n    y = 0,\r\n    radius = 1,\r\n    thickness = 1,\r\n    color = 0x00aaff,\r\n    opacity = 1,\r\n    height,\r\n    stroke,\r\n  } = window.ELLIPSE_CONFIG;\r\n  \r\n  graphics.lineStyle(thickness, stroke, opacity);\r\n  graphics.fillStyle(color, opacity);\r\n  \r\n  if (height) {\r\n    graphics.fillEllipse(x, y, radius, height);\r\n    \r\n    if (stroke) {\r\n      graphics.strokeEllipse(x, y, radius, height);\r\n    }\r\n  }\r\n  else {\r\n    graphics.fillCircle(x, y, radius);\r\n    \r\n    if (stroke) {\r\n      graphics.strokeCircle(x, y, radius);\r\n    }\r\n  }\r\n}","import { getHexColor } from \"../utils/hex-color\";\r\n\r\nwindow._spawn = () => {\r\n  const sceneObject = window.SPAWN_OBJECT;\r\n  const { x, y, angle, _class_name, id } = sceneObject;\r\n  const name = _class_name.toLowerCase();\r\n  \r\n  let isKinematic = _isKinematic(sceneObject);\r\n  let isStatic = _isStatic(sceneObject) || isKinematic;\r\n  \r\n  const ignorePointer = !_collideUsesPointer(sceneObject) && !_overlapUsesPointer(sceneObject);\r\n  const isSensor = sceneObject._overlap_name === \"GHOST\" ;\r\n  \r\n  const index = id - 1;\r\n  SCENE[index] = sceneObject;\r\n  \r\n  // Text\r\n  if (sceneObject._is_text) {\r\n    const { content, font, size, color } = sceneObject;\r\n    \r\n    let text = phaserContext.add.text(x, y, content, { fontFamily: font, fontSize: size, fill: getHexColor(color) });\r\n    \r\n    if (sceneObject._collide_name) {\r\n      let matterText =\r\n        phaserContext.matter.add.gameObject(text, { isSensor, ignorePointer })\r\n        .setStatic(isStatic)\r\n        .setIgnoreGravity(isSensor || isKinematic)\r\n        .setAngle(angle);\r\n        \r\n      sceneObject.obj = matterText;\r\n    }\r\n    else {\r\n      sceneObject.obj = text;\r\n    }\r\n  }\r\n  // Timers\r\n  else if (sceneObject._is_timer) {\r\n    const { rate, count } = sceneObject;\r\n    const event = {\r\n      delay: rate,\r\n      callbackScope: phaserContext,\r\n      callback: () => {\r\n        sceneObject.fire();\r\n      }\r\n    }\r\n    \r\n    if (count > 0) {\r\n      event.repeat = count - 1;\r\n    }\r\n    else {\r\n      event.loop = true\r\n    }\r\n    \r\n    phaserContext.time.addEvent(event);\r\n  }\r\n  // Images\r\n  else {\r\n    // Thank you Kevin! https://github.com/kvn-prhn\r\n    let spriteType = spriteTypeRefs[name];\r\n    let texture_name = name; \r\n    // handle when the class has no image\r\n    if (spriteType === undefined) {\r\n      spriteType = \"image\"; \r\n      texture_name = \"__default_no_image__\"; \r\n    }\r\n    const { friction } = sceneObject;\r\n    \r\n    // TODO: Add scale (and a bunch of other properties)\r\n    let img = phaserContext.matter.add[spriteType](x, y, texture_name, null, {\r\n      ignorePointer,\r\n      isSensor,\r\n      friction\r\n    }).setAngle(angle);\r\n    \r\n    // Tweak img\r\n    if (img.texture.key === \"__MISSING\") {\r\n      img.destroy();\r\n      img = null;\r\n    }\r\n    else {\r\n      img.setStatic(isStatic);\r\n      img.setIgnoreGravity(isSensor || isKinematic || !sceneObject._collide_name);\r\n    }\r\n    \r\n    sceneObject.obj = img;\r\n  }\r\n  \r\n  // Set misc \"private\" variables\r\n  if (sceneObject._has_hover) {\r\n    sceneObject._hover = false;\r\n    sceneObject._pointer_down = false;\r\n  }\r\n  \r\n  // Set the adjusted sceneObject\r\n  SCENE[index] = sceneObject;\r\n}","import { getHexColor } from \"../utils/hex-color\";\r\n\r\nwindow._updateSceneObject = () => {\r\n  const { x, y, content, color, alpha, id, _is_dead } = window.LUA_SCENE_OBJECT;\r\n  const index = id - 1;\r\n  const sceneObject = SCENE[index];\r\n  \r\n  if (_is_dead) {\r\n    const lastSceneObject = SCENE.pop();\r\n    const doesNotMatchLastObject = lastSceneObject.id !== sceneObject.id;\r\n    \r\n    if (SCENE.length > 0 && doesNotMatchLastObject) {\r\n      lastSceneObject.id = id;\r\n      SCENE[index] = lastSceneObject;\r\n    }\r\n    \r\n    sceneObject.obj.destroy();\r\n  }\r\n  else if (sceneObject && sceneObject.obj) {\r\n    sceneObject.obj.x = x;\r\n    sceneObject.obj.y = y;\r\n    \r\n    if (sceneObject._is_sprite) {\r\n      sceneObject.obj.alpha = alpha\r\n    }\r\n    \r\n    if (sceneObject._is_text) {\r\n      sceneObject.obj.setText(content);\r\n      sceneObject.obj.setFill(getHexColor(color));\r\n    }\r\n  }\r\n}","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { moonscriptTemplate, luaTemplate } from \"../utils/lunar-templates\";\r\n  // import \"../global/events\";\r\n  import \"../global/sprite\";\r\n  import \"../global/physics\";\r\n  import \"../global/audio\";\r\n  import \"../global/draw\";\r\n\timport \"../global/spawn\";\r\n\timport \"../global/scene\";\r\n\r\n  export let server64;\r\n\r\n  window.sceneObjectTemplate = {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tangle: 0\r\n\t}\r\n\t\r\n\twindow.SCENE = [];\r\n\t// window.refSceneObjects = [];\r\n\twindow.spriteTypeRefs = {};\r\n\twindow.soundObjects = {};\r\n\r\n  onMount(async () => {\r\n    // Load data from server\r\n    const botAPIEndpoint = \"https://wwd-site-bot.uc.r.appspot.com/\";\r\n    const botAPIResponse = await fetch(botAPIEndpoint + server64);\r\n    const data = await botAPIResponse.json();\r\n    const { moonscriptSegments, assets } = data;\r\n\r\n    // Create and execute Lua template\r\n\t\tconst moonscriptCreate = moonscriptTemplate(moonscriptSegments).trim();\r\n\t\t\r\n\t\tconst luaSegments = {\r\n\t\t\tcreate: await window.MoonScript.compile(moonscriptCreate),\r\n\t\t\tupdate: await window.MoonScript.compile(moonscriptSegments.update)\r\n\t\t}\r\n\t\t\r\n\t\tconst returnPattern = /^return/gm;\r\n\t\tluaSegments.create = luaSegments.create.replaceAll(returnPattern, \"\");\r\n\t\tluaSegments.update = luaSegments.update.replaceAll(returnPattern, \"\");\r\n\t\t\r\n\t\tconst lua = luaTemplate(luaSegments);\r\n    \r\n    // Phaser - Load assets\r\n    function preload() {\r\n\t\t\tfor (let asset of assets) {\r\n\t\t\t\tconst name = asset.name.toLowerCase();\r\n\t\t\t\tconst { url } = asset;\r\n\t\t\t\t\r\n\t\t\t\tif (asset.animations.length) {\r\n\t\t\t\t\tconst { frameWidth, frameHeight } = asset;\r\n\t\t\t\t\tthis.load.spritesheet(name, url, { frameWidth, frameHeight });\r\n\t\t\t\t}\r\n\t\t\t\telse if (asset.type === \"sound\") {\r\n\t\t\t\t\tthis.load.audio(name, [url]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.load.image(name, url);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// default image for when none is given\r\n\t\t\tthis.load.image(\"__default_no_image__\", \"/assets/default-no-image.png\");\r\n    }\r\n    \r\n    // Phaser - Start game\r\n    function create() {\r\n      // Global config\r\n      window.phaserContext = this;\r\n\t\t\twindow.graphics = this.add.graphics();\r\n\t\t\t\r\n\t\t\t// Physics config\r\n\t\t\tthis.matter.world.autoUpdate = false;\r\n\t\t\tthis.matter.world.setBounds();\r\n      this.matter.add.pointerConstraint({ length: 1, stiffness: 1 });\r\n\r\n      // Assets config\r\n\t\t\tfor (let asset of assets) {\r\n\t\t\t\tconst name = asset.name.toLowerCase();\r\n\t\t\t\tconst { animations, frameRate, type } = asset;\r\n\t\t\t\t\r\n\t\t\t\t// Animations\r\n\t\t\t\tspriteTypeRefs[name] = animations.length ? \"sprite\" : \"image\";\r\n\t\t\t\t\r\n\t\t\t\tfor (let animation of animations) {\r\n\t\t\t\t\tconst [key] = Object.keys(animation);\r\n\t\t\t\t\tconst frames = animation[key];\r\n\t\t\t\t\tconst lastFrame = frames.pop();\r\n\t\t\t\t\tlet repeat = 1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (typeof lastFrame === \"string\" && lastFrame.toLowerCase() === \"loop\") {\r\n\t\t\t\t\t\trepeat = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tframes.push(lastFrame);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.anims.create({\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tframes: this.anims.generateFrameNumbers(name, { frames }),\r\n\t\t\t\t\t\tframeRate,\r\n\t\t\t\t\t\trepeat\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Sounds\r\n\t\t\t\tif (type === \"sound\") {\r\n\t\t\t\t\tconst sound = this.sound.add(name);\r\n\t\t\t\t\tsoundObjects[name] = sound;\r\n\t\t\t\t}\r\n      }\r\n      \r\n      // Physics events\r\n\t\t\tthis.matter.world.on(\"collisionstart\", (event, body1, body2) => {\r\n\t\t\t\t// Colliding bodies\r\n\t\t\t\tlet collideRefs = SCENE.filter((sceneObject) => sceneObject._collide_name);\r\n\t\t\t\tlet collideObject1 = collideRefs.find((sceneObject) => sceneObject.obj.body === body1);\r\n\t\t\t\tlet collideObject2 = collideRefs.find((sceneObject) => sceneObject.obj.body === body2);\r\n\t\t\t\t\r\n\t\t\t\tif ((collideObject1 && collideObject1.id) && (collideObject2 && collideObject2.id)) {\r\n\t\t\t\t\twindow.COLLIDE_ID1 = collideObject1.id;\r\n\t\t\t\t\twindow.COLLIDE_ID2 = collideObject2.id;\r\n\t\t\t\t\twindow.run_collide();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// // DEBUG\r\n\t\t\t\t// console.log(collideRefs, collideObject1, collideObject2)\r\n\t\t\t\t\r\n\t\t\t\t// Overlapping bodies\r\n\t\t\t\tlet overlapRefs = SCENE.filter((sceneObject) => sceneObject._overlap_name);\r\n\t\t\t\tlet overlapObject1 = overlapRefs.find((sceneObject) => sceneObject.obj.body === body1);\r\n\t\t\t\tlet overlapObject2 = overlapRefs.find((sceneObject) => sceneObject.obj.body === body2);\r\n\t\t\t\t\r\n\t\t\t\tif ((overlapObject1 && overlapObject1.id) && (overlapObject2 && overlapObject2.id)) {\r\n\t\t\t\t\twindow.OVERLAP_ID1 = overlapObject1.id;\r\n\t\t\t\t\twindow.OVERLAP_ID2 = overlapObject2.id;\r\n\t\t\t\t\twindow.run_overlap();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// // DEBUG\r\n\t\t\t\t// console.log(overlapRefs, overlapObject1, overlapObject2);\r\n      });\r\n      \r\n      // Keyboard events\r\n\t\t\tdocument.addEventListener(\"keydown\", (e) => {\r\n\t\t\t\tif (e.repeat) return;\r\n\t\t\t\t\r\n\t\t\t\tconst key = e.key.trim() ? e.key.toUpperCase() : e.code.toUpperCase();\r\n\t\t\t\t\r\n\t\t\t\twindow.KEY = key;\r\n\t\t\t\twindow.run_press();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tdocument.addEventListener(\"keyup\", (e) => {\r\n\t\t\t\tif (e.repeat) return;\r\n\t\t\t\t\r\n\t\t\t\tconst key = e.key.toUpperCase();\r\n\t\t\t\t\r\n\t\t\t\twindow.KEY = key;\r\n\t\t\t\twindow.run_unpress();\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// Pointer events\r\n\t\t\tthis.input.on(\"pointermove\", (pointer) => {\r\n\t\t\t\tconst { worldX, worldY } = pointer;\r\n\t\t\t\tconst hoverObjects = SCENE.filter((sceneObject) => sceneObject._has_hover && sceneObject.obj);\r\n\t\t\t\t\r\n\t\t\t\tSCENE.forEach((sceneObject) => {\r\n\t\t\t\t\tconst { body } = sceneObject.obj || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (body) {\r\n\t\t\t\t\t\tsceneObject._isPointerOver = this.matter.containsPoint(body, worldX, worldY);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t// DE-DUPE\r\n\t\t\t\thoverObjects.forEach((sceneObject) => {\r\n\t\t\t\t\tif (sceneObject._isPointerOver) {\r\n\t\t\t\t\t\tif (!sceneObject._did_hover && !sceneObject._pointer_down) {\r\n\t\t\t\t\t\t\twindow.HOVER_ID = sceneObject.id;\r\n\t\t\t\t\t\t\twindow.run_hover();\r\n\t\t\t\t\t\t\tsceneObject._did_hover = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (sceneObject._pointer_down) {\r\n\t\t\t\t\t\t\tsceneObject._dragging = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (sceneObject._did_hover) {\r\n\t\t\t\t\t\tif (sceneObject._has_unhover) {\r\n\t\t\t\t\t\t\twindow.UNHOVER_ID = sceneObject.id;\r\n\t\t\t\t\t\t\twindow.run_unhover();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (sceneObject._has_unclick && !sceneObject._dragging) {\r\n\t\t\t\t\t\t\twindow.UNCLICK_ID = sceneObject.id;\r\n\t\t\t\t\t\t\twindow.run_unclick();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tsceneObject.dragging = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsceneObject._did_hover = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.input.on(\"pointerdown\", (pointer) => {\r\n\t\t\t\t// const { worldX, worldY } = pointer;\r\n\t\t\t\tconst clickObjects = SCENE.filter((sceneObject) => sceneObject._has_click);\r\n\t\t\t\t\r\n\t\t\t\tclickObjects.forEach((sceneObject) => {\r\n\t\t\t\t\tif (sceneObject._isPointerOver) {\r\n\t\t\t\t\t\twindow.CLICK_ID = sceneObject.id;\r\n\t\t\t\t\t\twindow.run_click();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsceneObject._pointer_down = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (sceneObject._collide_name === \"KINEMATIC_POINTER\") {\r\n\t\t\t\t\t\tsceneObject.obj.setStatic(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.input.on(\"pointerup\", (pointer) => {\r\n\t\t\t\tconst { worldX, worldY } = pointer;\r\n\t\t\t\tconst unclickObjects = SCENE.filter((sceneObject) => sceneObject._has_unclick);\r\n\t\t\t\t\r\n\t\t\t\tunclickObjects.forEach((sceneObject) => {\t\r\n\t\t\t\t\tif (sceneObject._pointer_down) {\t\t\t\t\t\t\r\n\t\t\t\t\t\twindow.UNCLICK_ID = sceneObject.id;\r\n\t\t\t\t\t\twindow.run_unclick();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsceneObject._pointer_down = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst { body } = sceneObject.obj;\r\n\t\t\t\t\tsceneObject._did_hover = body && this.matter.containsPoint(body, worldX, worldY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (sceneObject._collide_name === \"KINEMATIC_POINTER\") {\r\n\t\t\t\t\t\tsceneObject.obj.setStatic(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n      // Execute our Lua, bay-bee!\r\n      window.fengari.load(lua)();\r\n    }\r\n\r\n    // Phaser - Once per frame\r\n    function update(time, delta) {\r\n\t\t\t// Lua game update\r\n\t\t\twindow.game_update();\r\n\t\t\t\r\n\t\t\t// Physics\r\n\t\t\tthis.matter.world.step(delta);\r\n\t\t\t\r\n\t\t\tSCENE.filter((sceneObject) => sceneObject._collide_name).forEach((collideSceneObject) => {\r\n\t\t\t\tconst isKinematic = _isKinematic(collideSceneObject);\r\n\t\t\t\tconst isCharacter = _isCharacter(collideSceneObject);\r\n\t\t\t\t\r\n\t\t\t\tif (isKinematic || isCharacter) {\r\n\t\t\t\t\tcollideSceneObject.obj.setAngularVelocity(0);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (isKinematic) {\r\n\t\t\t\t\t\tcollideSceneObject.obj.setVelocity(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst { x, y, angle, body } = collideSceneObject.obj;\r\n\t\t\t\tconst { velocity } = body;\r\n\t\t\t\t\r\n\t\t\t\twindow._SET_POSITION_ID = collideSceneObject.id;\r\n\t\t\t\twindow._SET_POSITION_X = x;\r\n\t\t\t\twindow._SET_POSITION_Y = y;\r\n\t\t\t\twindow._SET_POSITION_ANGLE = angle\r\n\t\t\t\twindow._SET_POSITION_VELOCITY_X = velocity.x\r\n\t\t\t\twindow._SET_POSITION_VELOCITY_Y = velocity.y\r\n\t\t\t\twindow.set_position();\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t// Draw\r\n\t\t\tgraphics.clear();\r\n\t\t\t\r\n\t\t\tSCENE.filter((sceneObject) => sceneObject._has_draw).forEach((drawSceneObject) => {\r\n\t\t\t\twindow.DRAW_ID = drawSceneObject.id;\r\n\t\t\t\twindow.run_draw();\r\n\t\t\t});\r\n    }\r\n\r\n    // Create Phaser game\r\n    let gameConfig = {\r\n\t\t\t// ...window.configStub,\r\n\t\t\ttype: Phaser.AUTO,\r\n\t\t\tphysics: {\r\n\t\t\t\tdefault: \"matter\",\r\n\t\t\t\tmatter: {\r\n\t\t\t\t\t// debug: true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tscene: {\r\n\t\t\t\tpreload,\r\n\t\t\t\tcreate,\r\n\t\t\t\tupdate,\r\n\t\t\t}\r\n    }\r\n    \r\n    window.game = new Phaser.Game(gameConfig);\r\n  })\r\n</script>\r\n\r\n<svelte:head>\r\n\t<script src=\"/fengari-web.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"/phaser.min.js\"></script>\r\n\t<script src=\"/moonscript/index.js\"></script>\r\n</svelte:head>","export function moonscriptTemplate(moonscriptSegments) {\r\n\treturn `\r\n-- Core\r\nexport TYPE = \"__class\"\r\nexport NAME = \"__name\"\r\nexport SCENE = {}\r\n\r\n-- Physics\r\nexport class KINEMATIC\r\nexport class POINTER\r\nexport class KINEMATIC_POINTER\r\nexport class STATIC\r\nexport class GRAVITY\r\nexport class CHARACTER\r\n\r\nexport UP = \"Up\"\r\nexport DOWN = \"Down\"\r\nexport LEFT = \"Left\"\r\nexport RIGHT = \"Right\"\r\n\r\n-- Input\r\nexport class HOLD\r\nexport class ONCE\r\n\r\nexport PRESS_HOLD = {}\r\nexport PRESS_HOLD_KEYS = {}\r\n\r\nexport CLICK_HOLD = {}\r\nexport HOVER_HOLD = {}\r\nexport KEYS = {}\r\n\r\n-- Sprites\r\nexport ANIMATED = {}\r\n\r\n\r\n-- Scene objects\r\nexport class Scene_Object\r\n\t@count: 0\r\n\tnew: =>\r\n\t\t@@count += 1\r\n\t\t@x = 0\r\n\t\t@y = 0\r\n\t\t@angle = 0\r\n\t\t@alpha = 1\r\n\t\t@velocity = {\r\n\t\t\tx: 0\r\n\t\t\ty: 0\r\n\t\t}\r\n\t\t@friction = 0\r\n\r\n\r\nexport class Text\r\n\tnew: =>\r\n\t\t@content = \"\"\r\n\t\t@size = 16\r\n\t\t@font = \"Arial\"\r\n\t\t@color = 0x00aaff\r\n\t\t@_is_text = true\r\n\toverlap: =>\r\n\r\nexport class Physics_Text\r\n\tnew: =>\r\n\t\t@content = \"\"\r\n\t\t@size = 16\r\n\t\t@font = \"Arial\"\r\n\t\t@color = 0x00aaff\r\n\t\t@_is_text = true\r\n\tcollide: =>\r\n\r\nexport class Static_Text extends Physics_Text\r\n\tcollide: => STATIC\r\n\r\nexport class Kinematic_Text extends Physics_Text\r\n\tcollide: => KINEMATIC\r\n\r\nexport class Pointer_Text extends Physics_Text\r\n\tcollide: => POINTER\r\n\r\nexport class Kinematic_Pointer_Text extends Physics_Text\r\n\tcollide: => KINEMATIC_POINTER\r\n\r\n\r\nexport class Timer\r\n\tnew: =>\r\n\t\t@fire = -> nil\r\n\t\t@rate = 1000\r\n\t\t@count = 1\r\n\t\t@_is_timer = true\r\n\r\n\r\nexport spawn = (archetype, config = {}) ->\r\n\tscene_object_temp = Scene_Object!\r\n\tarchetype_temp = archetype!\r\n\tinstance = with archetype_temp\r\n\t\tfor k,v in pairs scene_object_temp\r\n\t\t\t[k] = v if archetype_temp[k] == nil\r\n\t\tfor k,v in pairs config\r\n\t\t\t[k] = v\r\n\t\t.id = Scene_Object.count\r\n\t\t._class_name = archetype[NAME]\r\n\t\t._has_click = .click ~= nil\r\n\t\t._has_unclick = .unclick ~= nil\r\n\t\t._has_hover = .hover ~= nil\r\n\t\t._has_unhover = .unhover ~= nil\r\n\t\t._has_draw = .draw ~= nil\r\n\t\tif .collide\r\n\t\t\tcollide_obj = \\\\collide {}\r\n\t\t\tif collide_obj then ._collide_name = collide_obj[NAME] else ._collide_name = \"GRAVITY\"\r\n\t\tif .overlap\r\n\t\t\toverlap_obj = \\\\overlap {}\r\n\t\t\tif overlap_obj then ._overlap_name = overlap_obj[NAME] else ._overlap_name = \"GHOST\"\r\n\t\tif ._is_text == nil and ._is_timer == nil\r\n\t\t\t._is_sprite = true\r\n\t\r\n\tfor k,v in pairs instance[TYPE].__base\r\n\t\tinstance[\"__\" .. k] = v\r\n\r\n\tjs.global.SPAWN_OBJECT = Object(instance)\r\n\tjs.global._spawn!\r\n\t\r\n\tSCENE[instance.id] = instance\r\n\t-- update_scene!\r\n\t\r\n\treturn instance\r\n    \r\n\r\n-- TODO: Remove most of this function?\r\nexport destroy = (instance) ->\r\n\tinstance._is_dead = true\r\n\t\r\n\t\r\n\t-- last_scene_object = table.remove(SCENE)\r\n\t-- Scene_Object.count -= 1\r\n\t\r\n\t-- if #SCENE > 0\r\n\t-- \tlast_scene_object.id = instance.id\r\n\t-- \tSCENE[instance.id] = last_scene_object\r\n\t\t\r\n\t-- js.global.DESTROY_INSTANCE = Object(instance)\r\n\t-- js.global._destroy!\r\n\t\r\n\t-- update_scene!\r\n\t\r\n\t\r\n\t-- _document\\\\dispatchEvent(js.new(_custom_event, \"destroy\", Object({\r\n\t-- \tdetail: Object(instance)\r\n\t-- })))\r\n\r\n\r\nexport mirror = (instance) ->\r\n\tjs.global.MIRROR_ID = instance.id\r\n\tjs.global.MIRROR_X = true\r\n\tjs.global.mirrorSprite!\r\n\r\nexport unmirror = (instance) ->\r\n\tjs.global.MIRROR_ID = instance.id\r\n\tjs.global.MIRROR_X = false\r\n\tjs.global.mirrorSprite!\r\n\r\n\r\nexport flip = (instance) ->\r\n\tjs.global.FLIP_ID = instance.id\r\n\tjs.global.FLIP_Y = true\r\n\tjs.global.flipSprite!\r\n\r\nexport unflip = (instance) ->\r\n\tjs.global.FLIP_ID = instance.id\r\n\tjs.global.FLIP_Y = false\r\n\tjs.global.flipSprite!\r\n\r\n\r\nexport animate = (instance, name) ->\r\n\tif ANIMATED[instance.id] == nil\r\n\t\tjs.global.ANIMATE_ID = instance.id\r\n\t\tjs.global.ANIMATE_NAME = name\r\n\t\tjs.global.animateSprite!\r\n\t\tANIMATED[instance.id] = name\r\n\r\nexport unanimate = (instance) ->\r\n\tif ANIMATED[instance.id]\r\n\t\tjs.global.UNANIMATE_ID = instance.id\r\n\t\tjs.global.UNANIMATE_NAME = ANIMATED[instance.id]\r\n\t\tjs.global.unanimateSprite!\r\n\t\tANIMATED[instance.id] = nil\r\n\r\n\r\nexport thrust = (instance, direction, amount) ->\r\n\tjs.global.THRUST_ID = instance.id\r\n\tjs.global.THRUST_DIRECTION = direction\r\n\tjs.global.THRUST_AMOUNT = amount\r\n\tjs.global.applyThrust!\r\n\r\n\r\nexport play = (sound_name) ->\r\n\tjs.global.SOUND_NAME = sound_name\r\n\tjs.global.playSound!\r\n\r\nexport pause = (sound_name) ->\r\n\tjs.global.SOUND_NAME = sound_name\r\n\tjs.global.pauseSound!\r\n\r\nexport resume = (sound_name) ->\r\n\tjs.global.SOUND_NAME = sound_name\r\n\tjs.global.resumeSound!\r\n\t\r\nexport stop = (sound_name) ->\r\n\tjs.global.SOUND_NAME = sound_name\r\n\tjs.global.stopSound!\r\n\t\r\n\t\r\nexport line = (config) ->\r\n\tjs.global.LINE_CONFIG = Object(config)\r\n\tjs.global.drawLine!\r\n\r\nexport rectangle = (config) ->\r\n\tjs.global.RECTANGLE_CONFIG = Object(config)\r\n\tjs.global.drawRectangle!\r\n\r\nexport ellipse = (config) ->\r\n\tjs.global.ELLIPSE_CONFIG = Object(config)\r\n\tjs.global.drawEllipse!\r\n\r\n\r\n${moonscriptSegments.create}\r\n`\r\n}\r\n\r\nexport function luaTemplate(luaSegments) {\r\n  return `\r\njs = require \"js\"\r\n\r\nfunction Object(t)\r\n\tlocal o = js.new(js.global.Object)\r\n\tfor k, v in pairs(t) do\r\n\t\to[k] = v\r\n\tend\r\n\treturn o\r\nend\r\n\r\n_document = js.global.document\r\n_custom_event = js.global.CustomEvent\r\n\r\nfunction update_scene()\r\n\t-- js.global.SCENE = js.global:Array()\r\nend\r\n\r\njs.global.set_position = function()\r\n\tlocal id = js.global._SET_POSITION_ID\r\n\t\r\n\tSCENE[id].x = js.global._SET_POSITION_X\r\n\tSCENE[id].y = js.global._SET_POSITION_Y\r\n\tSCENE[id].angle = js.global._SET_POSITION_ANGLE\r\n\tSCENE[id].velocity = {\r\n\t\tx = js.global._SET_POSITION_VELOCITY_X,\r\n\t\ty = js.global._SET_POSITION_VELOCITY_Y\r\n\t}\r\nend\r\n\r\njs.global.add_keys = function()\r\n\tlocal id = js.global.ID\r\n\tlocal has_press = js.global.HAS_PRESS\r\n\tSCENE[id]._has_press = has_press\r\n\t\r\n\tSCENE[id]._keys = {}\r\n\tfor k,v in pairs(js.global.KEYS) do\r\n\t\tSCENE[id]._keys[v] = true\r\n\tend\r\nend\r\n\r\n\r\njs.global.run_press = function()\r\n\tlocal key = js.global.KEY\r\n\tlocal press_callback_name = \"press_\" .. key\r\n\t\r\n\tPRESS_HOLD_KEYS[key] = {}\r\n\t\r\n\tfor id, scene_object in pairs(SCENE) do\r\n\t\tif scene_object[press_callback_name] then\r\n\t\t\tlocal result = scene_object[press_callback_name](scene_object)\r\n\t\t\t\r\n\t\t\tif (result and result[NAME] ~= \"ONCE\") or result == nil then\r\n\t\t\t\tPRESS_HOLD_KEYS[key][id] = scene_object\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t\r\nend\r\n\r\njs.global.run_unpress = function()\r\n\tlocal key = js.global.KEY\r\n\tlocal unpress_callback_name = \"unpress_\" .. key\r\n\t\r\n\tfor id, scene_object in pairs(SCENE) do\r\n\t\tif scene_object[unpress_callback_name] then\r\n\t\t\tscene_object[unpress_callback_name](scene_object)\r\n\t\tend\r\n\tend\r\n\t\r\n\tPRESS_HOLD_KEYS[key] = {}\r\nend\r\n\r\n\r\njs.global.run_hover = function()\r\n\tlocal id = js.global.HOVER_ID\r\n\tlocal hover_object = SCENE[id]:hover()\r\n\t\r\n\tif hover_object and hover_object[NAME] == \"HOLD\" then\r\n\t\tHOVER_HOLD[id] = SCENE[id]\r\n\tend\r\nend\r\n\r\njs.global.run_unhover = function()\r\n\tlocal id = js.global.UNHOVER_ID\r\n\t\r\n\tif SCENE[id].unhover then\r\n\t\tSCENE[id]:unhover()\r\n\tend\r\n\t\r\n\tHOVER_HOLD = {}\r\nend\r\n\r\n\r\njs.global.run_click = function()\r\n\tlocal id = js.global.CLICK_ID\r\n\tlocal click_object = SCENE[id]:click()\r\n\t\r\n\tif click_object and click_object[NAME] == \"HOLD\" then\r\n\t\tCLICK_HOLD[id] = SCENE[id]\r\n\tend\r\nend\r\n\r\njs.global.run_unclick = function()\r\n\tlocal id = js.global.UNCLICK_ID\r\n\t\t\r\n\tif SCENE[id].unclick then\r\n\t\tSCENE[id]:unclick()\r\n\tend\r\n\r\n\tCLICK_HOLD = {}\r\nend\r\n\r\n\r\njs.global.run_draw = function()\r\n\tlocal id = js.global.DRAW_ID\r\n\t\r\n\tif SCENE[id].draw then\r\n\t\tSCENE[id]:draw()\r\n\tend\r\nend\r\n\r\n\r\njs.global.run_collide = function()\r\n\tlocal id1 = js.global.COLLIDE_ID1\r\n\tlocal id2 = js.global.COLLIDE_ID2\r\n\tSCENE[id1]:collide(SCENE[id2])\r\n\tSCENE[id2]:collide(SCENE[id1])\r\nend\r\n\r\njs.global.run_overlap = function()\r\n\tlocal id1 = js.global.OVERLAP_ID1\r\n\tlocal id2 = js.global.OVERLAP_ID2\r\n\tSCENE[id1]:overlap(SCENE[id2])\r\n\tSCENE[id2]:overlap(SCENE[id1])\r\nend\r\n\r\n\r\n${luaSegments.create}\r\n\r\njs.global.game_update = function()\r\n\t${luaSegments.update}\r\n\t\r\n\tfor input_key, v in pairs(PRESS_HOLD_KEYS) do\r\n\t\tlocal press_callback_name = \"press_\" .. input_key\r\n\t\t\r\n\t\tfor id, scene_object in pairs(PRESS_HOLD_KEYS[input_key]) do\r\n\t\t\tif scene_object[press_callback_name] then\r\n\t\t\t\tscene_object[press_callback_name](scene_object)\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t\r\n\tfor id, scene_object in pairs(HOVER_HOLD) do\r\n\t\tif scene_object and scene_object.hover then\r\n\t\t\tscene_object:hover()\r\n\t\tend\r\n\tend\r\n\r\n\tfor id, scene_object in pairs(CLICK_HOLD) do\r\n\t\tif scene_object and scene_object.click then\r\n\t\t\tscene_object:click()\r\n\t\tend\r\n\tend\r\n\t\r\n\tlocal to_be_destroyed = {}\r\n\t\r\n\tfor id, scene_object in pairs(SCENE) do\r\n\t\tjs.global.LUA_SCENE_OBJECT = Object(scene_object)\r\n\t\tjs.global._updateSceneObject()\r\n\t\t\r\n\t\tif scene_object._is_dead then\r\n\t\t\tto_be_destroyed[id] = scene_object\r\n\t\tend\r\n\tend\r\n\t\r\n\tfor id, _ in pairs(to_be_destroyed) do\r\n\t\tlast_scene_object = table.remove(SCENE)\r\n\t\tScene_Object.count = Scene_Object.count - 1\r\n\t\t\r\n\t\tif #SCENE > 0 and last_scene_object.id ~= id then\r\n\t\t\tlast_scene_object.id = id\r\n\t\t\tSCENE[id] = last_scene_object\r\n\t\tend\r\n\tend\r\nend\r\n`\r\n}","<script>\r\n\timport { Router, Route } from \"svelte-routing\";\r\n\timport Discord from \"./routes/Discord.svelte\";\r\n\timport Home from \"./routes/Home.svelte\";\r\n\timport Server64 from \"./routes/Server64.svelte\";\r\n</script>\r\n\r\n<Router>\r\n\t<Route path=\"/\">\r\n\t\t<Home />\r\n\t</Route>\r\n\r\n\t<Route path=\"/:server64\" let:params>\r\n\t\t<Server64 {...params} />\r\n\t</Route>\r\n\t\r\n\t<Route path=\"/:server64/discord\" let:params>\r\n\t\t<Discord {...params} />\r\n\t</Route>\r\n</Router>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","attr","attribute","value","removeAttribute","getAttribute","setAttribute","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","setContext","key","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","parent_component","prop_values","bound","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","addEventListener","removeEventListener","to","replace","Date","now","replaceState","pushState","e","createHistory","Boolean","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","paramRe","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","combinePaths","basepath","url","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","listen","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","routeParams","routeProps","$activeRoute","server64","botAPIResponse","fetch","json","discordURL","href","directionSigns","style","event","handler","selectedIndex","active","$selectedIndex","woodenSigns","list","outro","marginTop","selectSign","getHexColor","color","baseHexColor","toString","padZeros","mirrorSprite","MIRROR_ID","sceneObject","SCENE","flipX","MIRROR_X","flipSprite","FLIP_ID","flipY","FLIP_Y","animateSprite","ANIMATE_ID","anims","play","ANIMATE_NAME","unanimateSprite","UNANIMATE_ID","pause","setProgress","applyThrust","THRUST_ID","direction","THRUST_DIRECTION","amount","THRUST_AMOUNT","_isKinematic","_collide_name","startsWith","_isStatic","_isCharacter","_collideUsesPointer","endsWith","_overlapUsesPointer","_overlap_name","CollideSceneObjects","playSound","SOUND_NAME","toLowerCase","phaserContext","sound","setVolume","soundObjects","pauseSound","resumeSound","resume","stopSound","drawLine","x1","y1","x2","y2","thickness","opacity","LINE_CONFIG","graphics","lineStyle","lineBetween","drawRectangle","x","y","width","height","stroke","RECTANGLE_CONFIG","fillStyle","fillRect","strokeRect","drawEllipse","radius","ELLIPSE_CONFIG","fillEllipse","strokeEllipse","fillCircle","strokeCircle","_spawn","SPAWN_OBJECT","angle","_class_name","id","isKinematic","isStatic","ignorePointer","isSensor","_is_text","content","font","size","fontFamily","fontSize","matterText","matter","gameObject","setStatic","setIgnoreGravity","setAngle","_is_timer","rate","count","delay","callbackScope","fire","repeat","loop","time","addEvent","spriteType","spriteTypeRefs","texture_name","friction","img","texture","destroy","_has_hover","_hover","_pointer_down","_updateSceneObject","alpha","_is_dead","LUA_SCENE_OBJECT","lastSceneObject","doesNotMatchLastObject","_is_sprite","setText","setFill","sceneObjectTemplate","moonscriptSegments","assets","moonscriptCreate","moonscriptTemplate","trim","luaSegments","MoonScript","compile","returnPattern","replaceAll","lua","luaTemplate","gameConfig","Phaser","AUTO","physics","scene","preload","asset","animations","frameWidth","frameHeight","load","spritesheet","audio","image","world","autoUpdate","setBounds","pointerConstraint","stiffness","frameRate","animation","frames","lastFrame","generateFrameNumbers","on","body1","body2","collideRefs","collideObject1","find","body","collideObject2","COLLIDE_ID1","COLLIDE_ID2","run_collide","overlapRefs","overlapObject1","overlapObject2","OVERLAP_ID1","OVERLAP_ID2","run_overlap","toUpperCase","code","KEY","run_press","run_unpress","input","pointer","worldX","worldY","hoverObjects","_isPointerOver","containsPoint","_did_hover","HOVER_ID","run_hover","_dragging","_has_unhover","UNHOVER_ID","run_unhover","_has_unclick","UNCLICK_ID","run_unclick","dragging","_has_click","CLICK_ID","run_click","fengari","delta","game_update","step","collideSceneObject","isCharacter","setAngularVelocity","setVelocity","velocity","_SET_POSITION_ID","_SET_POSITION_X","_SET_POSITION_Y","_SET_POSITION_ANGLE","_SET_POSITION_VELOCITY_X","_SET_POSITION_VELOCITY_Y","set_position","_has_draw","drawSceneObject","DRAW_ID","run_draw","game","Game"],"mappings":"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"}